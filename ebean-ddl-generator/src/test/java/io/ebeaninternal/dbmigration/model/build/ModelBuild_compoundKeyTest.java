package io.ebeaninternal.dbmigration.model.build;


import io.ebean.BaseTestCase;
import io.ebean.DatabaseFactory;
import io.ebean.config.DatabaseConfig;
import io.ebeaninternal.api.SpiEbeanServer;
import io.ebeaninternal.dbmigration.ddlgeneration.Helper;
import io.ebeaninternal.dbmigration.migration.Migration;
import io.ebeaninternal.dbmigration.migrationreader.MigrationXmlReader;
import io.ebeaninternal.dbmigration.model.CurrentModel;
import io.ebeaninternal.dbmigration.model.MTable;
import io.ebeaninternal.dbmigration.model.ModelContainer;
import org.junit.jupiter.api.Test;
import org.tests.model.basic.CKeyAssoc;
import org.tests.model.basic.CKeyDetail;
import org.tests.model.basic.CKeyParent;
import org.tests.model.basic.CKeyParentId;

import java.io.IOException;

import static org.assertj.core.api.Assertions.assertThat;

public class ModelBuild_compoundKeyTest extends BaseTestCase {

  private SpiEbeanServer createServer() {

    DatabaseConfig config = new DatabaseConfig();
    config.setName("h2");
    config.loadFromProperties();
    config.setName("h2other");
    config.setDdlGenerate(false);
    config.setDdlRun(false);
    config.setDdlExtra(false);
    config.setDefaultServer(false);
    config.setRegister(false);

    config.addClass(CKeyDetail.class);
    config.addClass(CKeyParent.class);
    config.addClass(CKeyAssoc.class);
    config.addClass(CKeyParentId.class);

    return (SpiEbeanServer) DatabaseFactory.create(config);
  }

  @Test
  public void test() throws IOException {
    SpiEbeanServer ebeanServer = createServer();
    try {
      CurrentModel currentModel = new CurrentModel(ebeanServer);
      ModelContainer model = currentModel.read();

      MTable parent = model.getTable("ckey_parent");
      MTable detail = model.getTable("ckey_detail");

      assertThat(parent).isNotNull();
      assertThat(detail).isNotNull();
      assertThat(parent.primaryKeyColumns()).hasSize(2);
      assertThat(detail.getCompoundKeys()).hasSize(1);

      String apply = Helper.asText(this, "/assert/ModelBuild_compoundKeyTest/apply.sql");

      String createDdl = currentModel.getCreateDdl();
      assertThat(createDdl).startsWith("-- Generated by ebean").endsWith(apply);

    } finally {
      ebeanServer.shutdown();
    }
  }

  @Test
  public void testFromMigration() throws IOException {

    Migration migration = MigrationXmlReader.read("/container/test-compoundkey.xml");
    SpiEbeanServer ebeanServer = createServer();
    try {
      CurrentModel currentModel = new CurrentModel(ebeanServer);
      currentModel.setChangeSet(migration.getChangeSet().get(0));

      String createDdl = currentModel.getCreateDdl();
      String apply = Helper.asText(this, "/assert/ModelBuild_compoundKeyTest/apply.sql");

      assertThat(createDdl).startsWith("-- Generated by ebean").endsWith(apply);
    } finally {
      ebeanServer.shutdown();
    }
  }
}
